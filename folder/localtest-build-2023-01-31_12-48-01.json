{
  "id" : "63d8c08a4094246abbbf45a1",
  "cts" : 1675149450033,
  "mts" : 1675149450033,
  "name" : "localtest",
  "displayName" : "localtest",
  "description" : "operation on a single pet",
  "apiRevision" : 1,
  "protocols" : [ "https" ],
  "serviceUrl" : "https://petstore.swagger.io",
  "path" : "test",
  "authenticationSettings" : { },
  "subscriptionKeyParameterNames" : {
    "header" : "Ocp-Apim-Subscription-Key",
    "query" : "subscription-key"
  },
  "contact" : {
    "email" : "apiteam@swagger.io"
  },
  "license" : {
    "name" : "Apache 2.0",
    "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
  },
  "termsOfServiceUrl" : "http://swagger.io/terms/",
  "isCurrent" : true,
  "apiOperations" : [ {
    "name" : "deletetetete",
    "displayName" : "deletePetbyid",
    "method" : "Delete",
    "urlTemplate" : "/pet/1234",
    "templateParameters" : [ ],
    "description" : "Deletes pet",
    "responses" : [ {
      "description" : "successful operation",
      "headers" : [ ],
      "representations" : [ {
        "contentType" : "application/json",
        "typeName" : "Video"
      } ],
      "statusCode" : 200
    } ],
    "policies" : [ {
      "name" : "Validate parameters",
      "description" : "The validate-parameters policy validates the header, query, or path parameters in requests against the API schema.",
      "scope" : [ "GLOBAL", "PRODUCT", "API", "OPERATION" ],
      "section" : [ "INBOUND" ],
      "useDefault" : true,
      "policyElements" : [ {
        "name" : "validate-parameters",
        "policyElementAttributes" : [ {
          "name" : "specified-parameter-action",
          "value" : "detect",
          "valueType" : "String",
          "required" : false
        }, {
          "name" : "unspecified-parameter-action",
          "value" : "detect",
          "valueType" : "String",
          "required" : false
        }, {
          "name" : "errors-variable-name",
          "value" : "requestParametersValidation",
          "valueType" : "String",
          "required" : false
        } ],
        "policyElements" : [ {
          "name" : "headers",
          "policyElementAttributes" : [ {
            "name" : "specified-parameter-action",
            "value" : "detect",
            "valueType" : "String",
            "required" : false
          }, {
            "name" : "unspecified-parameter-action",
            "value" : "detect",
            "valueType" : "String",
            "required" : false
          } ],
          "policyElements" : [ {
            "name" : "parameter",
            "policyElementAttributes" : [ {
              "name" : "name",
              "value" : "Authorization",
              "valueType" : "String",
              "required" : false
            }, {
              "name" : "action",
              "value" : "prevent",
              "valueType" : "String",
              "required" : false
            } ],
            "required" : false
          }, {
            "name" : "parameter",
            "policyElementAttributes" : [ {
              "name" : "name",
              "value" : "User-Agent",
              "valueType" : "String",
              "required" : false
            }, {
              "name" : "action",
              "value" : "ignore",
              "valueType" : "String",
              "required" : false
            } ],
            "required" : false
          }, {
            "name" : "parameter",
            "policyElementAttributes" : [ {
              "name" : "name",
              "value" : "Host",
              "valueType" : "String",
              "required" : false
            }, {
              "name" : "action",
              "value" : "ignore",
              "valueType" : "String",
              "required" : false
            } ],
            "required" : false
          }, {
            "name" : "parameter",
            "policyElementAttributes" : [ {
              "name" : "name",
              "value" : "Referrer",
              "valueType" : "String",
              "required" : false
            }, {
              "name" : "action",
              "value" : "ignore",
              "valueType" : "String",
              "required" : false
            } ],
            "required" : false
          } ],
          "required" : false
        } ],
        "required" : false
      } ]
    } ]
  } ],
  "policies" : [ {
    "name" : "Validate parameters",
    "description" : "The validate-parameters policy validates the header, query, or path parameters in requests against the API schema.",
    "scope" : [ "GLOBAL", "PRODUCT", "API", "OPERATION" ],
    "section" : [ "INBOUND" ],
    "useDefault" : true,
    "policyElements" : [ {
      "name" : "validate-parameters",
      "policyElementAttributes" : [ {
        "name" : "specified-parameter-action",
        "value" : "detect",
        "valueType" : "String",
        "required" : false
      }, {
        "name" : "unspecified-parameter-action",
        "value" : "detect",
        "valueType" : "String",
        "required" : false
      }, {
        "name" : "errors-variable-name",
        "value" : "requestParametersValidation",
        "valueType" : "String",
        "required" : false
      } ],
      "policyElements" : [ {
        "name" : "headers",
        "policyElementAttributes" : [ {
          "name" : "specified-parameter-action",
          "value" : "detect",
          "valueType" : "String",
          "required" : false
        }, {
          "name" : "unspecified-parameter-action",
          "value" : "detect",
          "valueType" : "String",
          "required" : false
        } ],
        "policyElements" : [ {
          "name" : "parameter",
          "policyElementAttributes" : [ {
            "name" : "name",
            "value" : "Authorization",
            "valueType" : "String",
            "required" : false
          }, {
            "name" : "action",
            "value" : "prevent",
            "valueType" : "String",
            "required" : false
          } ],
          "required" : false
        }, {
          "name" : "parameter",
          "policyElementAttributes" : [ {
            "name" : "name",
            "value" : "User-Agent",
            "valueType" : "String",
            "required" : false
          }, {
            "name" : "action",
            "value" : "ignore",
            "valueType" : "String",
            "required" : false
          } ],
          "required" : false
        }, {
          "name" : "parameter",
          "policyElementAttributes" : [ {
            "name" : "name",
            "value" : "Host",
            "valueType" : "String",
            "required" : false
          }, {
            "name" : "action",
            "value" : "ignore",
            "valueType" : "String",
            "required" : false
          } ],
          "required" : false
        }, {
          "name" : "parameter",
          "policyElementAttributes" : [ {
            "name" : "name",
            "value" : "Referrer",
            "valueType" : "String",
            "required" : false
          }, {
            "name" : "action",
            "value" : "ignore",
            "valueType" : "String",
            "required" : false
          } ],
          "required" : false
        } ],
        "required" : false
      } ],
      "required" : false
    } ]
  } ],
  "buildStatus" : "SCHEDULED",
  "connector" : {
    "id" : "63b8170994c5c011e77e44f6",
    "cts" : 1673008905560,
    "mts" : 1673008905560,
    "connectorName" : "test-2",
    "host" : "apiwiz-api-management.management.azure-api.net",
    "subscriptionId" : "3f942b28-7daf-4d8e-b614-42085fb8f8c5",
    "resourceGroup" : "apiwiz",
    "serviceName" : "apiwiz-api-management",
    "sharedAccessToken" : "SharedAccessSignature integration&202302030621&YvQiB3qu6ZZEwm6T6SMtipEFIW5DO5+QYqQ2SWDORY2qENKmR7hOvN8xwzZ2dFj1vHiAdsMocO0GZfy9Gv6VEA=="
  },
  "enableScmUpload" : true,
  "scmUpload" : {
    "apiBuildName" : "localtest",
    "apiBuildData" : "AzureApiBuild(name=localtest, displayName=localtest, description=operation on a single pet, apiRevision=1, apiVersion=null, apiRevisionDescription=null, protocols=[https], serviceUrl=https://petstore.swagger.io, path=test, authenticationSettings={oAuth2=null, openid=null}, subscriptionKeyParameterNames={header=Ocp-Apim-Subscription-Key, query=subscription-key}, isSubscriptionRequired=false, contact={name=null, url=null, email=apiteam@swagger.io}, license={name=Apache 2.0, url=http://www.apache.org/licenses/LICENSE-2.0.html}, termsOfServiceUrl=http://swagger.io/terms/, tags=null, products=null, isCurrent=true, isOnline=null, apiOperations=[ApiOperation(name=deletetetete, displayName=deletePetbyid, method=Delete, urlTemplate=/pet/1234, templateParameters=[], description=Deletes pet, request=null, responses=[RequestResponse(description=successful operation, headers=[], queryParameters=null, representations=[RepresentationContract(contentType=application/json, formParameters=null, sample=null, schemaId=null, typeName=Video)], statusCode=200)], policies=[AzurePolicy(id=null, name=Validate parameters, description=The validate-parameters policy validates the header, query, or path parameters in requests against the API schema., scope=[GLOBAL, PRODUCT, API, OPERATION], section=[INBOUND], useDefault=true, policyElements=[PolicyElement(name=validate-parameters, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=errors-variable-name, value=requestParametersValidation, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=headers, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Authorization, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=prevent, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=User-Agent, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Host, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Referrer, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false)], isRequired=false)], isRequired=false)])])], policies=[AzurePolicy(id=null, name=Validate parameters, description=The validate-parameters policy validates the header, query, or path parameters in requests against the API schema., scope=[GLOBAL, PRODUCT, API, OPERATION], section=[INBOUND], useDefault=true, policyElements=[PolicyElement(name=validate-parameters, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=errors-variable-name, value=requestParametersValidation, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=headers, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Authorization, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=prevent, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=User-Agent, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Host, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Referrer, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false)], isRequired=false)], isRequired=false)])], buildStatus=SCHEDULED, status=null, errorMessage=null, connector=AzureConfigurationVO(connectorName=test-2, scheme=null, host=apiwiz-api-management.management.azure-api.net, subscriptionId=3f942b28-7daf-4d8e-b614-42085fb8f8c5, resourceGroup=apiwiz, serviceName=apiwiz-api-management, sharedAccessToken=SharedAccessSignature integration&202302030621&YvQiB3qu6ZZEwm6T6SMtipEFIW5DO5+QYqQ2SWDORY2qENKmR7hOvN8xwzZ2dFj1vHiAdsMocO0GZfy9Gv6VEA==, apiVersion=2021-08-01), enableScmUpload=true, scmUpload=ScmUploadDTO(apiBuildName=null, apiBuildData=null, repoName=sample, branch=main, hostUrl=https://github.com/rahulitorix/sample.git, folderName=folder, commitMessage=null, token=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, scmSource=Git))",
    "repoName" : "sample",
    "branch" : "main",
    "hostUrl" : "https://github.com/rahulitorix/sample.git",
    "folderName" : "folder",
    "scmSource" : "Git"
  },
  "subscriptionRequired" : false
}