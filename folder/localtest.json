"AzureApiBuild(name=localtest, displayName=localtest, description=operation on a single pet, apiRevision=1, apiVersion=null, apiRevisionDescription=null, protocols=[https], serviceUrl=https://petstore.swagger.io, path=test, authenticationSettings={oAuth2=null, openid=null}, subscriptionKeyParameterNames={header=Ocp-Apim-Subscription-Key, query=subscription-key}, isSubscriptionRequired=false, contact={name=null, url=null, email=apiteam@swagger.io}, license={name=Apache 2.0, url=http://www.apache.org/licenses/LICENSE-2.0.html}, termsOfServiceUrl=http://swagger.io/terms/, tags=null, products=null, isCurrent=true, isOnline=null, apiOperations=[ApiOperation(name=deletetetete, displayName=deletePetbyid, method=Delete, urlTemplate=/pet/1234, templateParameters=[], description=Deletes pet, request=null, responses=[RequestResponse(description=successful operation, headers=[], queryParameters=null, representations=[RepresentationContract(contentType=application/json, formParameters=null, sample=null, schemaId=null, typeName=Video)], statusCode=200)], policies=[AzurePolicy(id=null, name=Validate parameters, description=The validate-parameters policy validates the header, query, or path parameters in requests against the API schema., scope=[GLOBAL, PRODUCT, API, OPERATION], section=[INBOUND], useDefault=true, policyElements=[PolicyElement(name=validate-parameters, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=errors-variable-name, value=requestParametersValidation, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=headers, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Authorization, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=prevent, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=User-Agent, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Host, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Referrer, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false)], isRequired=false)], isRequired=false)])])], policies=[AzurePolicy(id=null, name=Validate parameters, description=The validate-parameters policy validates the header, query, or path parameters in requests against the API schema., scope=[GLOBAL, PRODUCT, API, OPERATION], section=[INBOUND], useDefault=true, policyElements=[PolicyElement(name=validate-parameters, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=errors-variable-name, value=requestParametersValidation, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=headers, policyElementAttributes=[PolicyElementAttribute(name=specified-parameter-action, value=detect, valueType=String, isRequired=false), PolicyElementAttribute(name=unspecified-parameter-action, value=detect, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=[PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Authorization, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=prevent, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=User-Agent, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Host, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false), PolicyElement(name=parameter, policyElementAttributes=[PolicyElementAttribute(name=name, value=Referrer, valueType=String, isRequired=false), PolicyElementAttribute(name=action, value=ignore, valueType=String, isRequired=false)], value=null, valueType=null, policyElements=null, isRequired=false)], isRequired=false)], isRequired=false)])], buildStatus=SCHEDULED, status=null, errorMessage=null, connector=AzureConfigurationVO(connectorName=test-2, scheme=null, host=apiwiz-api-management.management.azure-api.net, subscriptionId=3f942b28-7daf-4d8e-b614-42085fb8f8c5, resourceGroup=apiwiz, serviceName=apiwiz-api-management, sharedAccessToken=SharedAccessSignature integration&202302030621&YvQiB3qu6ZZEwm6T6SMtipEFIW5DO5+QYqQ2SWDORY2qENKmR7hOvN8xwzZ2dFj1vHiAdsMocO0GZfy9Gv6VEA==, apiVersion=2021-08-01), enableScmUpload=true, scmUpload=ScmUploadDTO(apiBuildName=null, apiBuildData=null, repoName=sample, branch=main, hostUrl=https://github.com/rahulitorix/sample.git, folderName=folder, commitMessage=null, token=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, scmSource=Git))"